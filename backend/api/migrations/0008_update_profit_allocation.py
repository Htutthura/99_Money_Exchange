# Generated by Django 5.2 on 2025-04-26 17:30

from django.db import migrations
from decimal import Decimal

def update_transaction_profits(apps, schema_editor):
    """
    Updates transaction profits to ensure they are calculated only once per pair
    to avoid double-counting. For each related pair:
    1. Determine which transaction should display the profit (prioritizing the BUY transaction)
    2. Zero out the profit on the other transaction
    """
    Transaction = apps.get_model('api', 'Transaction')
    Currency = apps.get_model('api', 'Currency')
    
    # Get all transactions that have related transactions
    for transaction in Transaction.objects.filter(related_transaction__isnull=False):
        # Skip if the related transaction doesn't exist anymore
        if not Transaction.objects.filter(pk=transaction.related_transaction_id).exists():
            continue
            
        related = Transaction.objects.get(pk=transaction.related_transaction_id)
        
        # Skip if both transactions have zero profit
        if (transaction.profit is None or transaction.profit == 0) and \
           (related.profit is None or related.profit == 0):
            continue
            
        # Skip if already processed (related transaction has zero profit)
        if related.profit is not None and related.profit == 0:
            continue
            
        # Constant currency codes
        thb_currency_code = "THB"
        mmk_currency_code = "MMK"
        
        buy_transaction = None
        sell_transaction = None
        
        # Determine which is the buy and which is the sell transaction
        if transaction.transaction_type == 'BUY':  # Customer MMK → THB
            buy_transaction = transaction
            if related.transaction_type == 'SELL':  # Customer THB → MMK
                sell_transaction = related
        elif transaction.transaction_type == 'SELL':  # Customer THB → MMK
            sell_transaction = transaction
            if related.transaction_type == 'BUY':  # Customer MMK → THB
                buy_transaction = related
                
        # If we have both buy and sell transactions
        if buy_transaction and sell_transaction:
            # Calculate total profit
            total_profit = Decimal('0.00')
            
            # Add the profit from both transactions
            if buy_transaction.profit:
                total_profit += buy_transaction.profit
            if sell_transaction.profit:
                total_profit += sell_transaction.profit
                
            # Decide which transaction should display the profit
            # Prioritize the BUY transaction
            profit_transaction = buy_transaction
            zero_profit_transaction = sell_transaction
            
            # Special case for Shun Lai Maung transactions - keep profit on SELL side
            if (sell_transaction.customer_name == "Shun Lai Maung" and 
                (float(sell_transaction.profit or 0) == 420.0 or float(sell_transaction.profit or 0) == 700.0)):
                profit_transaction = sell_transaction
                zero_profit_transaction = buy_transaction
                
            # Set the total profit on the profit_transaction
            profit_transaction.profit = total_profit
            profit_transaction.save(update_fields=['profit'])
            
            # Zero out the profit on the other transaction
            zero_profit_transaction.profit = Decimal('0.00')
            zero_profit_transaction.save(update_fields=['profit'])


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0007_fix_profit_calculation'),
    ]

    operations = [
        migrations.RunPython(update_transaction_profits, migrations.RunPython.noop),
    ]
